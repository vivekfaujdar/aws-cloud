A fully managed NoSQL database service in AWS.

Stores data as key–value pairs and documents.

Serverless – you don’t manage servers, AWS handles scaling, replication, backups.



---

Key Features

NoSQL → Not relational, doesn’t use SQL joins or schemas.

Fast & scalable → Single-digit millisecond latency, scales automatically to handle millions of requests per second.

Highly available → Data is automatically replicated across multiple AZs in a region.

Flexible schema → Each item in a table doesn’t need to have the same attributes.

Integration with Lambda, API Gateway, Kinesis, etc. → good for serverless apps.

Global Tables → Multi-region replication for worldwide apps.

Streams → Capture changes in real time (good for event-driven apps).



---

Use Cases

Gaming leaderboards.

E-commerce product catalogs.

IoT device data.

Session management.

Real-time analytics.



---

Exam Tip (AWS Practitioner / Associate)

If you see:

“Managed NoSQL, key-value store, millisecond latency, scales automatically” → Answer is DynamoDB.

“Managed SQL database with complex queries/joins” → Answer is RDS or Aurora.

“Cache layer to speed up database” → Answer is ElastiCache.


What is DAX (DynamoDB Accelerator)?

DAX = DynamoDB Accelerator

It’s a fully managed, in-memory cache for DynamoDB.

Think of it like ElastiCache, but purpose-built for DynamoDB.



---

Key Points about DAX

Purpose: Reduce read latency from milliseconds (DynamoDB normal) → microseconds (DAX).

Caching layer: Stores results of DynamoDB queries (like GetItem, Query).

Fully compatible: Uses the same API calls as DynamoDB, so you don’t need to change much code.

Cluster-based: Runs as a managed cluster in your VPC.

High availability: Can be deployed with replicas across multiple AZs.

Use case: Read-heavy or bursty workloads (e.g., gaming leaderboards, e-commerce product catalog).



---

When to Use DAX

If your app is read-heavy and you want microsecond response times.

If you don’t want to manage your own caching layer (like Redis or Memcached).

If your workload requires millions of reads per second with very low latency.



---

Exam Tip (AWS Practitioner / Associate)

If you see “How to speed up DynamoDB reads?” → Answer: DAX.

If you see “How to speed up RDS/Aurora or general database reads?” → Answer: ElastiCache.

